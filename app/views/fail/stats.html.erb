<% content_for :header do %>
  <%= javascript_include_tag '//cdnjs.cloudflare.com/ajax/libs/d3/3.0.1/d3.v3.min.js' %>
  <%= javascript_include_tag '//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.4/underscore-min.js' %>
<% end -%>

<% content_for :style do %><style>
  #main { padding: 0 20px; max-width: 800px; }

  h2 { font-size: 17px; border-bottom: 1px solid #ddd; margin: 30px 0 10px; }

  #by_team { position: relative; }
  #by_team h3 { float: left; width: 80px; text-align: right; vertical-align: top; }

  #by_team .legend {
    position: absolute;
    top: 10px;
    right: 0;
  }

  #by_team .legend div {
    display: inline-block;
    width: 10px;
    height: 10px;
    margin-left: 10px;
  }

  .bar { height: 40px; margin: 0 0 10px 88px; }
  .bar > div {
    height: 100%;
    text-align: right;
    float: left;
  }

  /* colors from https://kuler.adobe.com/#themeID/2268804 */
  .failing { background-color: #E81C0C; }
  .acknowledged { background-color: #E8C57A; /* #FF9266 */ }
  .fixed { background-color: #166870; }

  #fail_by_day { height: 270px; }

  .bar span {
    display: inline-block;
    margin: 10px;
    font-size: 1.5em;
    color: #ddd;
  }

  .axis path,
  .axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
  }

  .x.axis path { display: none; }

  .histbar { fill: #166870; }
  .line {
    fill: none;
    stroke: #E81C0C;
    stroke-width: 1.5px;
  }

</style><% end -%>

<% content_for :js do %><script>
  var fail_total = <%= @team_max.to_json %>;
  var by_team = <%= @by_team.to_json.html_safe %>;
  var by_day_data = <%= @fail_by_day.to_json.html_safe %>;
  var fail_duration = <%= @fail_duration.to_json.html_safe %>;

  _(by_team).each(function(types, team) {
    var elem = $('#team_bar_tmpl').clone().attr('id', null).appendTo('#by_team').show();
    elem.find('h3').text(team);

    // count pending as acknowledged for simplicity
    types.acknowledged = (types.acknowledged || 0) + (types.pending || 0);

    _(types).each(function(count, type) {
      var barpart = elem.find('.'+type);
      barpart.width((count/fail_total*100) + '%');
      $('<span>').text(count).appendTo(barpart);
    })
  });

  
  (function by_day(data) {
    var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = $('#fail_by_day').width() - margin.left - margin.right;
    height = $('#fail_by_day').height() - margin.top - margin.bottom;
    parse_date = function(d) { return new Date(d.day*1000) };

    var x = d3.time.scale().range([0, width])
            .domain(d3.extent(data, parse_date));
    var y = d3.scale.linear().range([height, 0])
            .domain([0, d3.max(data, function(d) { return d.count })]);

    var xAxis = d3.svg.axis().scale(x).orient("bottom");
    var yAxis = d3.svg.axis().scale(y).orient("left");

    var line = d3.svg.line()
        .x(function(d) { return x(parse_date(d)); })
        .y(function(d) { return y(d.count); });

    var svg = d3.select("#fail_by_day").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
      .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

    svg.append("g").attr("class", "y axis").call(yAxis)

    svg.append("path")
        .datum(data)
        .attr("class", "line")
        .attr("d", line);

  })(by_day_data);

  (function by_duration(data) {
    var margin = {top: 20, right: 20, bottom: 30, left: 50},
        width = $('#fail_by_day').width() - margin.left - margin.right,
        height = $('#fail_by_day').height() - margin.top - margin.bottom;

    var x = d3.scale.ordinal().rangeRoundBands([0, width], .1)
            .domain(data.map(function(d,i) { return i }));
    var y = d3.scale.linear().range([height, 0]).domain([0, d3.max(data)]);

    var xAxis = d3.svg.axis().scale(x).orient("bottom")
                .tickValues(['< 1h', '3h', '12h', '1d', '3d', '1w', '2w', '1m', '> 1m']);
    var yAxis = d3.svg.axis().scale(y).orient("left");

    var svg = d3.select("#fail_duration").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
      .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis)

    svg.selectAll(".histbar")
        .data(data)
      .enter().append("rect")
        .attr("class", "histbar")
        .attr("x", function(d, i) { return x(i); })
        .attr("width", x.rangeBand())
        .attr("y", function(d) { return y(d); })
        .attr("height", function(d) { return height - y(d) });

  })(fail_duration);

</script><% end -%>

<div id='by_team'>
  <h2 style='margin-top:0'>Failed tests in the last day</h2>
  <div class='legend'>
    <div class='failing'></div> failing
    <div class='acknowledged'></div> acknowledged
    <div class='fixed'></div> fixed
  </div>

  <div id='team_bar_tmpl' style='display:none'>
    <h3></h3>
    <div class='bar'>
      <div class='failing'></div>
      <div class='acknowledged'></div>
      <div class='fixed'></div>
    </div>
  </div>
</div>

<h2>Failing tests over time</h2>
<div id='fail_by_day'></div>

<h2>Test failure durations for the last week</h2>
<div id='fail_duration'></div>
